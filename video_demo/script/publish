#!/usr/bin/env ruby
require 'json'
require 'date'

puts
puts "Warning: are you sure to reset the HEAD to origin/master?"
puts
puts "Current staged and local changes will be lost!"
puts
puts "Type 'yes' to continue"
x = STDIN.gets
exit(1) unless x.strip == 'yes'
puts

def verbose command
  puts("--> #{command}") || system(command) || fail("Failed: #{command}")
end

Dir.chdir(File.expand_path(File.join(File.dirname(__FILE__), '..')))

package = JSON.parse(File.read('package.json'))
original_version = package['version']
version = original_version.split('.').map{ |x| x.to_i }

puts "Choose one of the following bumping version options:"
puts "1. Patch"
puts "2. Minor"
puts "3. Major"
puts "4. Manual"
x = STDIN.gets.strip
exit(1) unless ["1", "2", "3", "4"].include?(x)
puts

case x
when "1"
  version[2] += 1
  version_string = version.join('.')
when "2"
  version[1] += 1
  version[2] = 0
  version_string = version.join('.')
when "3"
  version[0] += 1
  version[1] = 0
  version[2] = 0
  version_string = version.join('.')
when "4"
  puts "Specify the version in Semantic Versioning format:"
  version_string = STDIN.gets.strip
else
  exit(1)
end

package['version'] = version_string
changelog_file = 'CHANGELOG.md'
tag = "amazon-chime-sdk-js@#{version_string}"

# This is what most tools (e.g., `git describe`) use.
semvertag = "v#{version_string}"

puts
puts "Warning: you are bumping the version"
puts
puts "From: #{original_version}"
puts "To:   #{version_string}"
puts
puts "And creating the following tags:"
puts tag
puts semvertag
puts
puts "Type 'yes' to continue"
x = STDIN.gets
exit(1) unless x.strip == 'yes'
puts

#verbose('git fetch origin')
#verbose('git reset --hard origin/master')
#verbose('git clean -ffxd .')

File.write(changelog_file, File.read(changelog_file).gsub(/\[Unreleased\]/, "[#{version_string}] - #{Date.today}"))
verbose("npm version #{version_string} --no-git-tag-version")

verbose('git add -A')
verbose("git commit -m 'Publish #{tag}'")
verbose("git tag -d #{tag} || true")
verbose("git tag #{tag}")
verbose("git tag #{semvertag} -m \"Release #{semvertag}.\"")

verbose('npm run build:publish')
verbose('npm pack --dry-run')

verbose("npm run login")

puts
puts "Do you want to upload these files?"
puts
puts "Type 'yes' to continue"
x = STDIN.gets
exit(1) unless x.strip == 'yes'
puts

verbose("git push origin")
verbose("git push origin -f #{tag}")
verbose("git push origin -f #{semvertag}")
